{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Dart",
      "type": "dart",
      "request": "launch",
      "program": "bin/main.dart"
    },
    {
      "args": [
        "--extensionDevelopmentPath=${workspaceFolder}"
      ],
      "name": "Launch Extension",
      "outFiles": [
        "${workspaceFolder}/out/**/*.js"
      ],
      "preLaunchTask": "npm",
      "request": "launch",
      "type": "pwa-extensionHost"
    },
    {
      "name": "Dart: Run all Tests",
      "type": "dart",
      "request": "launch",
      "program": "./test/"
    },
    {
      "name": "Dart",
      "type": "dart",
      "request": "launch",
      "program": "lib/widgets/main.dart"
    },
    {
      "name": "Dart: Attach to Process",
      "type": "dart",
      "request": "attach"
    },
    {
      "name": "Flutter: Run all Tests",
      "type": "dart",
      "request": "launch",
      "program": "./test/"
    },
    {
      "name": "Flutter: Attach to Device",
      "type": "dart",
      "request": "attach"
    },
    {
      "name": "Flutter: Run all Tests",
      "type": "dart",
      "request": "launch",
      "program": "./test/"
    },
    {
      "name": "Flutter",
      "type": "dart",
      "request": "launch",
      "program": "main.dart"
    },
    {
      "name": "Flutter: Attach to Device",
      "type": "dart",
      "request": "attach"
    },
    {
      "name": "Flutter: Attach to Device",
      "type": "dart",
      "request": "attach"
    },
    {
      "name": "expense_manager",
      "request": "launch",
      "type": "lib/widgets/main.dart"
    },
    {
      "name": "C/C++ Runner: Debug Session",
      "type": "cppdbg",
      "request": "launch",
      "args": [],
      "stopAtEntry": false,
      "cwd": "/home/shubham/Desktop/Shubham_Codes/Flutter/expense_manager",
      "environment": [],
      "program": "/home/shubham/Desktop/Shubham_Codes/Flutter/expense_manager/build/Debug/outDebug",
      "internalConsoleOptions": "openOnSessionStart",
      "MIMode": "gdb",
      "miDebuggerPath": "/usr/bin/gdb",
      "externalConsole": false
    }
  ]
}