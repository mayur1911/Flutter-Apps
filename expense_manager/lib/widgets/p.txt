import 'package:intl/intl.dart';*/
import './widgets/transaction_list.dart';
import 'package:flutter/material.dart';
import './widgets/new_transactions.dart';
import './models/transactions.dart';
import './widgets/chart.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Personel Expenses',
      theme: ThemeData(
        primarySwatch: Colors.orange,
        fontFamily: 'Quicksand-Bold',
        accentColor: Colors.purple,
        /*  */
        textTheme: ThemeData.light().textTheme.copyWith(
              headline6: TextStyle(
                  fontFamily: 'OpenSans-Bold',
                  fontWeight: FontWeight.bold,
                  color: Colors.brown,
                  fontSize: 18),
            ),
        appBarTheme: AppBarTheme(
          textTheme: ThemeData.light().textTheme.copyWith(
                headline6: TextStyle(
                  /* healine is used for title */
                  fontFamily: 'OpenSans',
                  fontSize: 23,
                  color: Colors.pink,
                  fontWeight: FontWeight.bold,
                ),
              ),
        ),
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  /* stateless refer to that data is immutable */

  // String titleInput;
  // String amoutInput;
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final titleController = TextEditingController();

  final amountController = TextEditingController();
// list of transactions
  final List<Transaction> _userTransaction = [
     /* Transaction(
      id: 'T1',
      title: 'Bought shoe from dmart',
      amt: 90,
      date: DateTime.now(),
    ),
    Transaction(
      id: 'T2',
      title: 'grocey',
      amt: 100,
      date: DateTime.now(),
    ),  */
  ];

  List<Transaction> get _recentTransactions {
    return _userTransaction.where(
      (txx) {
        return txx.date.isAfter(
          DateTime.now().subtract(
            Duration(days: 7),
          ),
        );
      },
    ).toList();
  }

  void _addNeWTransaction(String txtitle, double amount) {
    final newTx = Transaction(
        id: DateTime.now().toString(),
        title: txtitle,
        amt: amount,
        date: DateTime.now());

    // this new should be added to userTransaction list above
    // adding new transaction
    setState(() {
      _userTransaction.add(newTx);
    });
  }

  void _startAddNewTransaction(BuildContext ctx) {
    showModalBottomSheet(
        context: ctx,
        builder: (_) {
          return GestureDetector(
            onTap: () {},
            child: NewTransaction(_addNeWTransaction),
            behavior: HitTestBehavior.opaque,
          );
        });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Personal Expenses!!'),
        actions: <Widget>[
          IconButton(
            icon: Icon(Icons.add),
            iconSize: 50,
            onPressed: () => _startAddNewTransaction(context),
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: <Widget>[
            Chart(_recentTransactions),
            TransactionList(_userTransaction),
          ],
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () => _startAddNewTransaction(context),
      ),
    );
  }
}